before_build(function (target)
	import("modules.version")

	local branch, commitHash = version()

	local versionString = string.format([[
#pragma once
// This file was autogenerated
#define BUILD_BRANCH "%s"
#define BUILD_COMMIT "%s"
#define BUILD_TIMESTAMP "Nope"
]], branch, commitHash)
	local versionStringCurrent = try
	{
		function()
			return io.open("Code/common/BuildInfo.h", "r")
		end
	}
	if versionStringCurrent~=nil then
		local versionStringCurrentString = versionStringCurrent:read("*a")
		versionStringCurrent:close()
		if (versionStringCurrentString == versionString) then
			return
		end
	end
	io.writefile("Code/common/BuildInfo.h", versionString)
end)

target("Common")
    set_kind("static")
    set_group("common")
    add_includedirs(".", "../", {public = true})
    add_headerfiles("**.h", {prefixdir = "Common"})
    add_files("**.cpp")
    add_packages("tiltedcore", "hopscotch-map")
